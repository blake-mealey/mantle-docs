---
title: Configuration
toc_max_heading_level: 6
---

## Config file resolving

All Mantle commands accept a `PROJECT` argument which tells Mantle where to look for your config file.
Mantle uses the following rules to find your config file:

1. If the `PROJECT` argument was _not provided_, use the `mantle.yml` file in the current directory as the
   config file (if it exists).
2. If the `PROJECT` argument was _a directory_, use the `mantle.yml` file in that directory as
   the config file (if it exists).
3. If the `PROJECT` argument was _a file_, use it as the config file (if it exists).

If no config file is found, Mantle will exit with an error code.

## YAML syntax

Mantle config files use YAML syntax, and should have either a `.yml` or `.yaml` file extension. To
quickly get started with the YAML syntax, see "[Learn YAML in Y Minutes](https://learnxinyminutes.com/docs/yaml/)"
or read through the examples in this guide and in the [Examples](https://github.com/blake-mealey/mantle-examples)
repo.

## Schema

You can view the JSON schema for the config file in the [Releases](https://github.com/blake-mealey/mantle/releases)
artifacts (only for versions above `0.11.0`). You can also use the schema to add autocomplete to your editor. For
VSCode, you can install the [YAML](https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml) extension
and add the following to your VSCode settings:

```json
"yaml.schemas": {
   "https://github.com/blake-mealey/mantle/releases/download/v0.11.0/schema.json": "mantle.yml"
}
```

Now you should see autocomplete suggestions and documentation while editing your `mantle.yml` config files.

## Reference

{{#each properties}}
{{#repeat this.level}}#{{/repeat}} `{{this.id}}`{{> heading-info }}{{anchor this.id}}

{{this.schema.description}}

{{/each}}
